@inject FileUploadStateService FileState
@inject AssetService AssetService
@inject IWebHostEnvironment Env
@inject ISnackbar Snackbar
@inject NavigationManager Nav

<MudButton Class="ma-4 py-3"
           Variant="Variant.Filled"
           Color="Color.Error"
           Size="Size.Large"
           OnClick="StoreFiles">
    <MudText Typo="Typo.subtitle2">
        <b>Store selected files (@SelectedCount)</b>
    </MudText>
</MudButton>

@code {
    [Parameter] public int SelectedCount { get; set; }
    
    private async Task StoreFiles()
    {
        if (FileState.PendingFiles.Count == 0)
        {
            Snackbar.Add("No files selected.", Severity.Warning);
            return;
        }

        foreach (var uploaded in FileState.PendingFiles)
        {
            var ext = Path.GetExtension(uploaded.Name).TrimStart('.').ToLower();
            var uniqueName = $"{Guid.NewGuid()}.{ext}";

            var uploadsDir = Path.Combine(Env.WebRootPath, "uploads");
            Directory.CreateDirectory(uploadsDir);

            var filePath = Path.Combine(uploadsDir, uniqueName);

            await File.WriteAllBytesAsync(filePath, uploaded.Data);

            var asset = AssetService.AddAsset(
                title: Path.GetFileNameWithoutExtension(uploaded.Name),
                filePath: $"/uploads/{uniqueName}",
                fileType: ext
            );

        }

        FileState.ClearFiles();

        Nav.NavigateTo("/"); 
    }
}